openapi: 3.0.3
info:
  title: Iffy
  description: A proof-of-concept feature flag service for Terra
  version: 0.0.1
paths:
  /status:
    get:
      summary: Check status of the service
      tags: [ public ]
      operationId: getStatus
      security: [ ]
      responses:
        '200':
          $ref: '#/components/responses/SystemStatusResponse'
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/SystemStatusResponse'

  /version:
    get:
      summary: Get version info of the deployed service
      tags: [ public ]
      operationId: getVersion
      security: [ ]
      responses:
        '200':
          description: Version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProperties'
        '404':
          description: "Version not configured"
        '500':
          $ref: '#/components/responses/ServerError'

  # Flag Evaluation methods
  /api/flag/v1/evaluateBool/{flagName}:
    post:
      summary: Evaluates a boolean feature flag
      tags: [ flag ]
      operationId: evaluateBool
      parameters:
        - name: flagName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EvaluationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluationResponseBool'
        '404':
          description: Flag not found
        '500':
          $ref: '#/components/responses/ServerError'
  /api/flag/v1/evaluateInteger/{flagName}:
    post:
      summary: Evaluates an integer feature flag
      tags: [ flag ]
      operationId: evaluateInteger
      parameters:
        - name: flagName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EvaluationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluationResponseInteger'
        '404':
          description: Flag not found
        '500':
          $ref: '#/components/responses/ServerError'
  /api/flag/v1/evaluateDouble/{flagName}:
    post:
      summary: Evaluates a double feature flag
      tags: [ flag ]
      operationId: evaluateDouble
      parameters:
        - name: flagName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EvaluationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluationResponseDouble'
        '404':
          description: Flag not found
        '500':
          $ref: '#/components/responses/ServerError'
  /api/flag/v1/evaluateString/{flagName}:
    post:
      summary: Evaluates a string feature flag
      tags: [ flag ]
      operationId: evaluateString
      parameters:
        - name: flagName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EvaluationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluationResponseString'
        '404':
          description: Flag not found
        '500':
          $ref: '#/components/responses/ServerError'
  /api/flag/v1/evaluateObject/{flagName}:
    post:
      summary: Evaluates an object-typed feature flag
      tags: [ flag ]
      operationId: evaluateObject
      parameters:
        - name: flagName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EvaluationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EvaluationResponseObject'
        '404':
          description: Flag not found
        '500':
          $ref: '#/components/responses/ServerError'

  /api/flag/v1/evaluateAll:
    post:
      summary: Evaluates all features for a given context
      tags: [ flag ]
      operationId: evaluateAll
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/EvaluationRequest'
      responses:
        '200':
          description: "Map of evaluation results"
          content:
            application/json:
              schema:
                type: object
                description: Map of evaluation results
                additionalProperties:
                  oneOf:
                    - $ref: '#/components/schemas/EvaluationResultBool'
                    - $ref: '#/components/schemas/EvaluationResultString'
                    - $ref: '#/components/schemas/EvaluationResultInteger'
                    - $ref: '#/components/schemas/EvaluationResultDouble'
                    - $ref: '#/components/schemas/EvaluationResultObject'
        '404':
          description: Not found
        '500':
          $ref: '#/components/responses/ServerError'

components:
  # Flag Evaluation Requests
  requestBodies:
    EvaluationRequest:
      description: A request for a feature flag evaluation
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationRequest'

  responses:
    # Flag Evaluation Responses
    EvaluationResponseBool:
      description: A response for the evaluation of a boolean feature flag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationResultBool'
    EvaluationResponseInteger:
      description: A response for the evaluation of an integer feature flag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationResultInteger'
    EvaluationResponseDouble:
      description: A response for the evaluation of a double feature flag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationResultDouble'
    EvaluationResponseString:
      description: A response for the evaluation of a string feature flag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationResultString'
    EvaluationResponseObject:
      description: A response for the evaluation of an object-typed feature flag
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationResultObject'

    # Status Responses
    SystemStatusResponse:
      description: A JSON description of the subsystems and their statuses.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'

    # Error Responses
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

  schemas:
    EvaluationRequest:
      description: Common fields for a flag evaluation request
      type: object
      required: [ context ]
      properties:
        context:
          $ref: '#/components/schemas/EvaluationContext'

    EvaluationContext:
      description: Client-supplied context for a flag evaluation. Arbitrary JSON data
      type: object
      additionalProperties: true

    EvaluationResultBool:
      description: Result of a boolean feature flag evaluation
      allOf:
        - $ref: '#/components/schemas/EvaluationResult'
        - type: object
          description: Value of the evaluation
          required: [ value ]
          properties:
            value:
              type: boolean

    EvaluationResultInteger:
      description: Result of an integer feature flag evaluation
      allOf:
        - $ref: '#/components/schemas/EvaluationResult'
        - type: object
          description: Value of the evaluation
          required: [ value ]
          properties:
            value:
              type: integer
              format: int32

    EvaluationResultDouble:
      description: Result of a double feature flag evaluation
      allOf:
        - $ref: '#/components/schemas/EvaluationResult'
        - type: object
          description: Value of the evaluation
          required: [ value ]
          properties:
            value:
              type: number
              format: double

    EvaluationResultString:
      description: Result of a string feature flag evaluation
      allOf:
        - $ref: '#/components/schemas/EvaluationResult'
        - type: object
          description: Value of the evaluation
          required: [ value ]
          properties:
            value:
              type: string

    EvaluationResultObject:
      description: Result of an object-typed feature flag evaluation
      allOf:
        - $ref: '#/components/schemas/EvaluationResult'
        - type: object
          description: Value of the evaluation
          required: [ value ]
          properties:
            value:
              type: object
              additionalProperties: true

    EvaluationResult:
      description: Common fields for the result for a feature flag evaluation
      type: object
      required: [ variant, reason ]
      properties:
        reason:
          $ref: '#/components/schemas/EvaluationReason'
        variant:
          $ref: '#/components/schemas/VariantName'

    VariantName:
      description: Name of the flag variant that was matched
      type: string

    EvaluationReason:
      description: Describes why the flag was evaluated to given variant
      type: string

    ErrorReport:
      type: object
      required: [ message, statusCode ]
      properties:
        message:
          type: string
        statusCode:
          type: integer

    SystemStatus:
      required: [ ok, systems ]
      type: object
      properties:
        ok:
          type: boolean
          description: whether any system(s) need attention
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string

    VersionProperties:
      type: object
      properties:
        gitTag:
          type: string
        gitHash:
          type: string
        github:
          type: string
        build:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth: [ ]
